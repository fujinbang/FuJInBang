package com.fujinbang.activity;

import android.app.AlertDialog;
import android.content.Context;
import android.content.Intent;
import android.database.Cursor;
import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import android.net.Uri;
import android.os.Bundle;
import android.provider.MediaStore;
import android.view.LayoutInflater;
import android.view.View;
import android.widget.AdapterView;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ListView;

import com.fujinbang.R;
import com.fujinbang.setting.SettingAdapter;
import com.fujinbang.view.TagFlowLayout;

public class SettingActivity extends BaseActivity implements AdapterView.OnItemClickListener {

    private ListView lv_setting_message;
    private LinearLayout ll_setting_view;
    private SettingAdapter mAdapter;

    private TagFlowLayout tfl_tag;

    private ImageView iv_back;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_setting);

        initRootView();
        initListView();
        initBack();
        initTag();
    }

    public final void initRootView() {
        ll_setting_view = (LinearLayout) findViewById(R.id.ll_setting_view);
    }

    public final void initListView() {
        mAdapter = new SettingAdapter(this);

        lv_setting_message = (ListView) findViewById(R.id.lv_setting_message);
        lv_setting_message.setAdapter(mAdapter);
        lv_setting_message.setOnItemClickListener(this);
    }

    public final void initTag() {
        tfl_tag = (TagFlowLayout) findViewById(R.id.tfl_tag);
        tfl_tag.setMode(TagFlowLayout.MODE_NORMAL);
        tfl_tag.addTag("+");
        tfl_tag.addTag("作业");
        tfl_tag.addTag("陪聊");
        tfl_tag.addTag("快递");
        tfl_tag.addTag("占位");
        tfl_tag.addTag("抢课");
        tfl_tag.addTag("跑腿");
        tfl_tag.setOnClickTagViewListener(new TagFlowLayout.onClickTagViewListener() {
            @Override
            public void onClick(View v, String TagName) {
                if (TagName == "+") {
                    TagActivity.startActivity(SettingActivity.this);
                }
            }
        });
    }

    private final void initBack() {
        iv_back = (ImageView) findViewById(R.id.iv_back);
        iv_back.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                SettingActivity.this.finish();
            }
        });
    }

    @Override
    public void onItemClick(AdapterView<?> parent, View view, int position, long id) {
        String property = mAdapter.getPropertyByPosition(position);
        switch (property) {
            case "头像":
                getAvatarFromLocal();
                break;
            case "昵称":
                UserNameSettingActivity.startActivity(this);
                break;
            case "性别":
                showSexSelectWindow();
                break;
            case "邮箱":
                EmailSettingActivity.startActivity(this);
                break;
            case "手机号":
                PhoneNumSettingActivity.startActivity(this);
                break;
            case "地区":
                break;
            default:
                break;
        }
    }

    private final void showSexSelectWindow() {
        View view = LayoutInflater.from(this).inflate(R.layout.popupwindow_setting_select_sex, null);
//        PopupWindow popupWindow = new PopupWindow(view, ViewGroup.LayoutParams.WRAP_CONTENT, ViewGroup.LayoutParams.WRAP_CONTENT, true);
//        popupWindow.setTouchable(true);
//        popupWindow.setBackgroundDrawable(getResources().getDrawable(R.drawable.white));
//        popupWindow.showAtLocation(ll_setting_view, Gravity.CENTER, 0, 0);
        AlertDialog alertDialog = new AlertDialog.Builder(this)
                .setView(view)
                .setCancelable(true)
                .show();
    }

    private static final int GET_AVATAR = 1;

    private void getAvatarFromLocal() {
        Intent intent = new Intent(Intent.ACTION_GET_CONTENT);
        intent.setType("image/*");
        intent.putExtra("crop", true);
        intent.putExtra("return-data", true);
        startActivityForResult(intent, GET_AVATAR);
    }

    @Override
    protected void onActivityResult(int requestCode, int resultCode, Intent data) {
        if (requestCode == GET_AVATAR && data != null) {
            Bitmap avatar;
            Uri selectedImage = data.getData();
            if (selectedImage != null) {
                String[] filePathColumn = {MediaStore.Images.Media.DATA};
                Cursor cursor = getContentResolver().query(selectedImage,
                        filePathColumn, null, null, null);
                cursor.moveToFirst();

                int columnIndex = cursor.getColumnIndex(filePathColumn[0]);
                String picturePath = cursor.getString(columnIndex);
                cursor.close();

                BitmapFactory.Options option = new BitmapFactory.Options();
                option.inJustDecodeBounds = true;
                BitmapFactory.decodeFile(picturePath, option);
                option.inSampleSize = calculateInSampleSize(option, 200, 200);
                option.inJustDecodeBounds = false;
                avatar = BitmapFactory.decodeFile(picturePath, option);

                mAdapter.setAvatar(avatar);
            }
        } else {
            super.onActivityResult(requestCode, resultCode, data);
        }
    }

    public static int calculateInSampleSize(BitmapFactory.Options options,
                                            int reqWidth, int reqHeight) {
        // 源图片的高度和宽度
        final int height = options.outHeight;
        final int width = options.outWidth;
        int inSampleSize = 1;
        if (height > reqHeight || width > reqWidth) {
            // 计算出实际宽高和目标宽高的比率
            final int heightRatio = Math.round((float) height / (float) reqHeight);
            final int widthRatio = Math.round((float) width / (float) reqWidth);
            // 选择宽和高中最小的比率作为inSampleSize的值，这样可以保证最终图片的宽和高
            // 一定都会大于等于目标的宽和高。
            inSampleSize = heightRatio < widthRatio ? heightRatio : widthRatio;
        }
        return inSampleSize;
    }

    public static void startActivity(Context context) {
        Intent intent = new Intent(context, SettingActivity.class);
        context.startActivity(intent);
    }
}
