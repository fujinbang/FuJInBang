package com.fujinbang.activity;

import android.app.AlertDialog;
import android.content.ActivityNotFoundException;
import android.content.Context;
import android.content.Intent;
import android.database.Cursor;
import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import android.net.Uri;
import android.os.Bundle;
import android.provider.MediaStore;
import android.view.LayoutInflater;
import android.view.View;
import android.widget.AdapterView;
import android.widget.CompoundButton;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ListView;
import android.widget.RadioButton;
import android.widget.RadioGroup;
import android.widget.Toast;

import com.clipimageview.ClipImageActivity;
import com.fujinbang.R;
import com.fujinbang.global.SimpleDataBase;
import com.fujinbang.setting.SettingAdapter;
import com.fujinbang.setting.User;
import com.fujinbang.setting.UserMsgRequest;
import com.fujinbang.setting.UserMsgUpload;
import com.fujinbang.view.TagFlowLayout;

import java.io.FileNotFoundException;

public class SettingActivity extends BaseActivity implements AdapterView.OnItemClickListener {

    private ListView lv_setting_message;
    private SettingAdapter mAdapter;

    private TagFlowLayout tfl_tag;

    private ImageView iv_back;

    private UserMsgUpload mUpload;

    private String mToken;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_setting);

        initListView();
        initBack();
        initTag();
    }

    public final void initListView() {
        mAdapter = new SettingAdapter(this);

        lv_setting_message = (ListView) findViewById(R.id.lv_setting_message);
        lv_setting_message.setAdapter(mAdapter);
        lv_setting_message.setOnItemClickListener(this);

        mToken = new SimpleDataBase(this).getToken();
    }

    public final void initTag() {
        tfl_tag = (TagFlowLayout) findViewById(R.id.tfl_tag);
        tfl_tag.setMode(TagFlowLayout.MODE_NORMAL);
        tfl_tag.addTag("+");
        tfl_tag.addTag("作业");
        tfl_tag.addTag("陪聊");
        tfl_tag.addTag("快递");
        tfl_tag.addTag("占位");
        tfl_tag.addTag("抢课");
        tfl_tag.addTag("跑腿");
        tfl_tag.setOnClickTagViewListener(new TagFlowLayout.onClickTagViewListener() {
            @Override
            public void onClick(View v, String TagName) {
                if (TagName == "+") {
                    TagActivity.startActivity(SettingActivity.this);
                }
            }
        });
    }

    private final void initBack() {
        iv_back = (ImageView) findViewById(R.id.iv_back);
        iv_back.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                SettingActivity.this.finish();
            }
        });
    }

    @Override
    public void onItemClick(AdapterView<?> parent, View view, int position, long id) {
        String property = mAdapter.getPropertyByPosition(position);
        switch (property) {
            case "头像":
                getAvatarFromLocal();
                break;
            case "昵称":
                UserNameSettingActivity.startActivity(this, mAdapter.getUserName());
                break;
            case "性别":
                showSexSelectWindow();
                break;
            case "邮箱":
                EmailSettingActivity.startActivity(this, mAdapter.getEmail());
                break;
            case "手机号":
                PhoneNumSettingActivity.startActivity(this, mAdapter.getPhoneNum());
                break;
            case "地区":
                break;
            default:
                break;
        }
    }

    private final void showSexSelectWindow() {
        View view = LayoutInflater.from(this).inflate(R.layout.popupwindow_setting_select_sex, null);
        RadioGroup sex = (RadioGroup) view.findViewById(R.id.rg_sex);
        RadioButton male = (RadioButton) view.findViewById(R.id.rb_male);
        RadioButton female = (RadioButton) view.findViewById(R.id.rb_female);

        if (mAdapter.getSex().equals("男")) {
            male.setChecked(true);
        } else {
            female.setChecked(true);
        }

        sex.setOnCheckedChangeListener(new RadioGroup.OnCheckedChangeListener() {
            @Override
            public void onCheckedChanged(RadioGroup group, int checkedId) {
                if (mUpload == null) mUpload = new UserMsgUpload(SettingActivity.this);

                if (checkedId == R.id.rb_male) {
                    mUpload.uploadSex(mToken, true, null);
                } else {
                    mUpload.uploadSex(mToken, false, null);
                }
            }
        });

        new AlertDialog.Builder(this).setView(view).setCancelable(true).show();
    }

    private static final int GET_AVATAR = 1;
    private static final int GET_CROP_RESULT = 2;

    private void getAvatarFromLocal() {
        try {
            Intent intent = new Intent(Intent.ACTION_GET_CONTENT);
            intent.setType("image/*");
            intent.putExtra("return-data", true);
            startActivityForResult(intent, GET_AVATAR);
        } catch (ActivityNotFoundException e) {
            Intent intent = new Intent(Intent.ACTION_PICK, null);
            intent.setDataAndType(
                    MediaStore.Images.Media.EXTERNAL_CONTENT_URI, "image/*");
            startActivityForResult(intent, GET_AVATAR);
        }
    }

    @Override
    protected void onResume() {
        super.onResume();
        //从网络上获取当前用户的信息并显示在页面上
        updateUserMsg();
    }

    /**
     * 从网络上获取当前用户的信息并显示在页面上
     */
    private void updateUserMsg() {
        String token = new SimpleDataBase(this).getToken();
        new UserMsgRequest(this).getUserMsg(token, new UserMsgRequest.OnUserListener() {
            @Override
            public void onSucess(User user) {
                mAdapter.setUserName(user.getUserName());
                mAdapter.setSex(user.isMan());
                mAdapter.setPhoneNum(user.getPhoneNum());
            }

            @Override
            public void onError(String error) {
                Toast.makeText(SettingActivity.this, "用户信息获取失败:" + error, Toast.LENGTH_SHORT).show();
            }
        });
    }

    @Override
    protected void onActivityResult(int requestCode, int resultCode, Intent data) {
        if (requestCode == GET_AVATAR && data != null) {
            ClipImageActivity.startActivityForResult(this, getFilePath(data.getData()), GET_CROP_RESULT);
        } else if (requestCode == GET_CROP_RESULT && data != null) {
            mAdapter.setAvatar(ClipImageActivity.getClipBitmap(data));
        } else {
            super.onActivityResult(requestCode, resultCode, data);
        }
    }

    /**
     * 通过uri获取文件路径
     *
     * @param mUri
     * @return
     */
    public String getFilePath(Uri mUri) {
        try {
            if (mUri.getScheme().equals("file")) {
                return mUri.getPath();
            } else {
                return getFilePathByUri(mUri);
            }
        } catch (FileNotFoundException ex) {
            return null;
        }
    }

    // 获取文件路径通过url
    private String getFilePathByUri(Uri mUri) throws FileNotFoundException {
        Cursor cursor = getContentResolver()
                .query(mUri, null, null, null, null);
        cursor.moveToFirst();
        return cursor.getString(1);
    }

    public static void startActivity(Context context) {
        Intent intent = new Intent(context, SettingActivity.class);
        context.startActivity(intent);
    }
}
