package com.fujinbang.activity;

import android.content.Context;
import android.content.Intent;
import android.graphics.drawable.AnimationDrawable;
import android.media.MediaPlayer;
import android.os.AsyncTask;
import android.os.Bundle;
import android.util.DisplayMetrics;
import android.view.View;
import android.view.ViewGroup;
import android.view.WindowManager;
import android.widget.FrameLayout;
import android.widget.GridLayout;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;

import com.fujinbang.R;
import com.fujinbang.global.MissionDetail;
import com.fujinbang.global.SimpleDataBase;
import com.fujinbang.global.StatusBarCompat;
import com.fujinbang.internet.HttpConnRequest;
import com.fujinbang.seekhelp.MediaManager;

import org.json.JSONArray;
import org.json.JSONObject;
import org.w3c.dom.Text;

import java.util.HashMap;

/**
 * Created by VITO on 2016/5/18.
 * 任务详情界面
 */
public class MissionDetailActivity extends BaseActivity implements View.OnClickListener{

    protected ImageView mission_detail_back,announcer_img;
    protected TextView announcer_name,txt_desc,start_time,end_time,rest_time,urge,status,bonus,add_bonus;
    protected GridLayout attender_list;
    protected RelativeLayout item1,item2,item3,item4;

    private View animView;
    private FrameLayout play_sound;
    private TextView record_time;
    float sec;
    String fpath;
    boolean isVoiceReq = false;
    private boolean isAnnouncer = false;
    private SimpleDataBase simpleDataBase;

    HashMap<String, Object> mission;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_mission_detail);
        mission = MissionDetail.getInstance().getMission(getIntent().getExtras().getInt("groupPosition"));
        if (mission.containsKey("isAnnouncer")){isAnnouncer = true;}
        simpleDataBase = new SimpleDataBase(this);
        initView();
    }

    private final void initView() {
        mission_detail_back = (ImageView) findViewById(R.id.mission_detail_back);
        announcer_img = (ImageView) findViewById(R.id.mission_detail_announcer_img);
        announcer_name = (TextView) findViewById(R.id.mission_detail_announcer_name);
        attender_list = (GridLayout)findViewById(R.id.mission_detail_attender_list);
        txt_desc = (TextView) findViewById(R.id.mission_detail_txt_desc);
        start_time = (TextView) findViewById(R.id.mission_detail_starttime);
        end_time = (TextView) findViewById(R.id.mission_detail_endtime);
        rest_time = (TextView) findViewById(R.id.mission_detail_rest_time);
        urge = (TextView) findViewById(R.id.mission_detail_urge);
        status = (TextView) findViewById(R.id.mission_detail_status);
        bonus = (TextView) findViewById(R.id.mission_detail_bonus);
        add_bonus = (TextView) findViewById(R.id.mission_detail_add_bonus);
        item1 = (RelativeLayout) findViewById(R.id.mission_detail_item1);
        item2 = (RelativeLayout) findViewById(R.id.mission_detail_item2);
        item3 = (RelativeLayout) findViewById(R.id.mission_detail_item3);
        item4 = (RelativeLayout) findViewById(R.id.mission_detail_item4);

        mission_detail_back.setOnClickListener(this);
        urge.setOnClickListener(this);
        add_bonus.setOnClickListener(this);
        item1.setOnClickListener(this);
        item2.setOnClickListener(this);
        item3.setOnClickListener(this);
        item4.setOnClickListener(this);
        txt_desc.setText(mission.get("desc").toString());
        start_time.setText(mission.get("start_time").toString());
        end_time.setText(mission.get("end_time").toString());
        if (mission.containsKey("restTime")){
            rest_time.setText(mission.get("restTime").toString());
        }
        bonus.setText(mission.get("bonus").toString());
        if (isAnnouncer){
            announcer_name.setText(simpleDataBase.getUserName());
            initAnnouncerImg();
        } else {
            //加载发布者头像与昵称
            initAnnouncer();
        }
        //加载参与者头像与昵称
        initAttender();



        /*
        record_time = (TextView) findViewById(R.id.mission_detail_recoder_time);
        record_time.setText("" + "\"");
        play_sound = (FrameLayout) findViewById(R.id.mission_detail_recoder_lenght);
        animView = findViewById(R.id.mission_detail_recoder_anim);
        play_sound.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                //播放帧动画
                animView.setBackgroundResource(R.drawable.play_anim);
                AnimationDrawable animation = (AnimationDrawable) animView.getBackground();
                animation.start();
                //播放录音
                MediaManager.playSound(fpath, new MediaPlayer.OnCompletionListener() {

                    public void onCompletion(MediaPlayer mp) {
                        //停止播放帧动画
                        animView.setBackgroundResource(R.drawable.adj);
                    }
                });
            }
        });*/



    }

    private void initAnnouncer() {
        new AsyncTask<Integer,Integer,String>(){

            @Override
            protected String doInBackground(Integer... params) {
                try {
                    JSONObject object = new JSONObject();
                    object.put("id", params[0]);
                    return HttpConnRequest.request("http://120.24.240.199:6789/user/queryuserinfo", "POST",object);
                } catch (Exception e) {
                    e.printStackTrace();
                }
                return null;
            }
            @Override
            protected void onPostExecute(String result){
                if (result!=null){
                    try{
                        JSONObject object = new JSONObject(result);
                        if (object.getInt("code") == 1){
                            JSONObject data = object.getJSONObject("data");
                            //helpList.get(Integer.parseInt(result[1])).put("nickName", data.getString("nickName"));
                        }
                    }catch (Exception e){e.printStackTrace();}
                }
            }
        }.execute(Integer.parseInt(mission.get("neederid").toString()));
        //加载头像
    }

    private void initAnnouncerImg(){

    }

    private void initAttender() {
        new AsyncTask<Integer, Integer, String>() {
            @Override
            protected String doInBackground(Integer... params) {
                try {
                    JSONObject object = new JSONObject();
                    object.put("helpid", params[0]);
                    return HttpConnRequest.request("http://120.24.240.199:6789/help/queryattenders", "GET", object);
                } catch (Exception e) {
                    e.printStackTrace();
                }
                return null;
            }
            @Override
            protected void onPostExecute(String result){
                if (result!=null){
                    try{
                        JSONObject obj = new JSONObject(result);
                        JSONArray attenders = obj.getJSONArray("attenders");
                        for (int i = 0;i<attenders.length();i++){
                            JSONObject attender = attenders.getJSONObject(i);
                            View view = View.inflate(MissionDetailActivity.this, R.layout.item_information, null);
                            TextView txt = (TextView) view.findViewById(R.id.item_information_name);
                            txt.setText(attender.getString("nickName"));
                            initAttenderImg(view, attender.getInt("userid"));
                        }
                    }catch (Exception e){e.printStackTrace();}
                }
            }
        }.execute(Integer.parseInt(mission.get("helpid").toString()));
    }

    private void initAttenderImg(View view, int userid) {
        final View copyView = view;
        new AsyncTask<String, Integer, String>() {
            @Override
            protected String doInBackground(String... params) {
                try {
                    JSONObject object = new JSONObject();
                    object.put("helpid", params[0]);
                    return HttpConnRequest.request("http://120.24.240.199:6789/help/queryattenders", "GET",object);
                } catch (Exception e) {
                    e.printStackTrace();
                }
                return null;
            }
            @Override
            protected void onPostExecute(String result){
                if (result!=null){
                    ImageView image = (ImageView) copyView.findViewById(R.id.item_information_img);
                    image.setBackgroundResource(R.drawable.ic_launcher);
                    attender_list.addView(copyView);
                }
            }
        }.executeOnExecutor(AsyncTask.THREAD_POOL_EXECUTOR, String.valueOf(userid));
    }


    public static void startActivity(Context context, int groupPosition) {
        Intent intent = new Intent(context, MissionDetailActivity.class);
        intent.putExtra("groupPosition", groupPosition);
        context.startActivity(intent);
    }

    @Override
    public void onClick(View v) {
        switch (v.getId()){
            case R.id.mission_detail_back:
                finish();
                break;
            case R.id.mission_detail_urge:
                //催促接单者
                break;
            case R.id.mission_detail_add_bonus:
                //追加奖励
                break;
            case R.id.mission_detail_item1:
                break;
            case R.id.mission_detail_item2:
                break;
            case R.id.mission_detail_item3:
                break;
            case R.id.mission_detail_item4:
                break;
            default:
                break;
        }
    }
}
