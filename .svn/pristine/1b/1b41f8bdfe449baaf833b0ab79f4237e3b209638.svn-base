package com.fujinbang.activity;

import android.content.Context;
import android.content.Intent;
import android.os.AsyncTask;
import android.os.Bundle;
import android.text.Editable;
import android.text.TextWatcher;
import android.view.MotionEvent;
import android.view.View;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import android.widget.Toast;

import com.fujinbang.R;
import com.fujinbang.internet.HttpConnRequest;
import com.fujinbang.internet.UrlConstant;

import org.json.JSONObject;

public class AddContactActivity extends BaseActivity implements View.OnTouchListener{
    protected RelativeLayout back;
    protected EditText phoneNum;
    protected LinearLayout search;
    protected TextView showNum;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_add_contact);
        initView();
    }

    private void initView() {
        back = (RelativeLayout)this.findViewById(R.id.add_contact_back);
        phoneNum = (EditText)this.findViewById(R.id.add_contact_phonenum);
        search = (LinearLayout)this.findViewById(R.id.add_contact_search);
        showNum = (TextView)this.findViewById(R.id.add_contact_shownum);

        back.setOnTouchListener(this);
        phoneNum.addTextChangedListener(textWatcher);
        search.setOnTouchListener(this);
    }

    protected TextWatcher textWatcher = new TextWatcher() {
        @Override
        public void beforeTextChanged(CharSequence s, int start, int count, int after) {

        }

        @Override
        public void onTextChanged(CharSequence s, int start, int before, int count) {

        }

        @Override
        public void afterTextChanged(Editable s) {
            if (phoneNum.getText().length() == 0){
                search.setVisibility(View.GONE);
            } else {
                search.setVisibility(View.VISIBLE);
                showNum.setText(phoneNum.getText().toString());
            }
        }
    };

    private void onClick(View v){
        switch (v.getId()){
            case R.id.add_contact_back:
                finish();
                break;
            case R.id.add_contact_search:
                if (phoneNum.getText().length() == 11){
                    searchTask();
                } else {
                    Toast.makeText(this,"请输入有效的手机号码",Toast.LENGTH_SHORT).show();
                }
                break;
            default:
                break;
        }
    }

    @Override
    public boolean onTouch(View v, MotionEvent event) {
        switch (event.getAction()) {
            case MotionEvent.ACTION_DOWN:
                if (v.getId() == R.id.add_contact_search){
                    v.setBackgroundColor(0xffe8e8e8);
                }
                break;
            case MotionEvent.ACTION_UP:
                if (v.getId() == R.id.add_contact_back){
                    v.setBackgroundColor(0x00000000);
                } else {
                    v.setBackgroundColor(0xffffffff);
                }
                onClick(v);
                break;
            default:
                break;
        }
        return true;
    }

    protected boolean canSearch = true;
    protected void searchTask(){
        if (!canSearch){
            return;
        }
        canSearch = false;
        new AsyncTask<String, Integer, String>() {
            @Override
            protected String doInBackground(String... params) {
                String result = null;
                try {
                    JSONObject obj = new JSONObject();
                    obj.put("phonenum",params[0]);
                    result = HttpConnRequest.request(UrlConstant.queryUserInfo,"POST",obj);
                }catch (Exception e){e.printStackTrace();}
                return result;
            }
            @Override
            protected void onPostExecute(String result){
                canSearch = true;
                if (result!=null){
                    try{
                        JSONObject object = new JSONObject(result);
                        if (object.getInt("code") == 1){
                            Toast.makeText(AddContactActivity.this,"查询成功",Toast.LENGTH_SHORT).show();
                            if (ContactActivity.userMap.containsKey(phoneNum.getText().toString())){
                                JSONObject data = object.getJSONObject("data");
                                UserActivity.startActivity(AddContactActivity.this, data.getInt("id"), true);
                            } else {
                                JSONObject data = object.getJSONObject("data");
                                UserActivity.startActivity(AddContactActivity.this, data.getInt("id"));
                            }
                        }
                    }catch (Exception e){
                        e.printStackTrace();
                        Toast.makeText(AddContactActivity.this,"查询不到该用户！",Toast.LENGTH_SHORT).show();
                    }
                } else {
                    Toast.makeText(AddContactActivity.this,"连接服务器失败！",Toast.LENGTH_SHORT).show();
                }
            }
        }.execute(phoneNum.getText().toString());
    }

    public static void startActivity(Context context) {
        Intent intent = new Intent(context, AddContactActivity.class);
        context.startActivity(intent);
    }
}
